* Node.js
** Uninstall Node.js
   [[https://gist.github.com/TonyMtz/d75101d9bdf764c890ef][Uninstall nodejs from OSX Yosemite]]
   #+BEGIN_SRC sh
     # first:
     lsbom -f -l -s -pf /var/db/receipts/org.nodejs.pkg.bom | while read f; do  sudo rm /usr/local/${f}; done
     sudo rm -rf /usr/local/lib/node /usr/local/lib/node_modules /var/db/receipts/org.nodejs.*

     # To recap, the best way (I've found) to completely uninstall node + npm is to do the following:

     # go to /usr/local/lib and delete any node and node_modules
     cd /usr/local/lib
     sudo rm -rf node*

     # go to /usr/local/include and delete any node and node_modules directory
     cd /usr/local/include
     sudo rm -rf node*

     # if you installed with brew install node, then run brew uninstall node in your terminal
     brew uninstall node

     # check your Home directory for any "local" or "lib" or "include" folders, and delete any "node" or "node_modules" from there
     # go to /usr/local/bin and delete any node executable
     cd /usr/local/bin
     sudo rm -rf /usr/local/bin/npm
     sudo rm -rf /usr/local/bin/node
     ls -las

     # you may need to do the additional instructions as well:
     sudo rm -rf /usr/local/share/man/man1/node.1
     sudo rm -rf /usr/local/lib/dtrace/node.d
     sudo rm -rf ~/.npm
#+END_SRC

*** my pattern
    #+BEGIN_SRC sh
      mv /usr/local/lib/node{,_}
      mv /usr/local/lib/node_modules{,_}
      mv /usr/local/share/man/man1/node.1{,_}
      mv /usr/local/lib/dtrace/node.d{,_}
      mv /usr/local/lib
      mv /usr/local/bin/npm{,_}
      mv /usr/local/bin/node{,_}
      mv ~/.npm{,_}
    #+END_SRC
    then, =brew install node=
** update pm2
   #+BEGIN_SRC sh
     sudo -E /usr/local/bin/npm i -g pm2@latest
     sudo -E pm2 update
     sudo -E pm2 startup centos
     pm2 update
     pm2 save
   #+END_SRC
** update nodebb
   #+BEGIN_SRC sh
     git fetch --all
     git checkout v1.x.x
     ./nodebb upgrade
     pm2 restart nodebb
   #+END_SRC
** promise, scraping, crawling
*** [[http://bluebirdjs.com/docs/getting-started.html][Getting Started | bluebird]]
*** [[https://gist.github.com/ghiden/43d8919eaabab19a1bc5][To promisify csv-parse using Bluebird]]
    #+BEGIN_SRC js
      var fsp = require('fs-promise');
      var parse = Promise.promisify(require('csv-parse'));
      var parseCsv = function(accounts){
          var options = {
              columns: true
          };
          return parse(accounts, options);
      };
      return fsp.readFile(__dirname + '/' + csv, {encoding:'utf8'})
          .then(parseCsv);
    #+END_SRC
*** [[https://www.npmjs.com/package/fs-promise][fs-promise]]
    #+BEGIN_SRC js
      var fsp = require('fs-promise');

      fsp.writeFile(file('hello1'), 'hello world')
        .then(function(){
          return fsp.readFile(file('hello1'), {encoding:'utf8'});
        })
        .then(function(contents){});
    #+END_SRC
*** [[https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise/all][Promise.all() - JavaScript | MDN]]
    #+BEGIN_SRC js
      Promise.all([p1, p2, p3, p4, p5])
          .then(values => {
              console.log(values);
          }).catch(reason => {
              console.log(reason)
          });
    #+END_SRC
*** [[https://github.com/request/request-promise][request/request-promise: The simplified HTTP request client 'request' with Promise support. Powered by Bluebird.]]
    #+BEGIN_SRC js
      var rp = require('request-promise');
      var form = {
          url: base + '/login',
          form: {
              'user': id,
              'password': pass
          },
          json: true
      };
      var loginCb = function(res){
          console.log(res);
      };
      return rp.post(form)
          .then(loginCb);
    #+END_SRC
*** [[https://www.npmjs.com/package/cheerio-httpcli][cheerio-httpcli]]
    #+BEGIN_SRC js
      var client = require('cheerio-httpcli');
      var login = function(result){
          return result.$('.loginForm').submit({
              user: user,
              password: password
          });
      };
      return client.fetch(url)
          .then(login)
          .then(function(result){
              // response headers
              console.log(result.response.headers);
              // title tag
              console.log(result.$('title').text());
              // cookies
              console.log(result.response.cookies);
          })
          .catch(function(error){
              console.log(error);
          });
    #+END_SRC
*** [[http://csv.adaltas.com/parse/examples/][CSV Parse Examples | Node.js CSV project]]
*** [[https://www.webniraj.com/2015/03/16/nodejs-scraping-websites-using-request-and-cheerio/][NodeJS: Scraping Websites Using Request and Cheerio | Web Niraj]]
    #+BEGIN_SRC js
      // include the libraries we need
      var request = require('request');
      var cheerio = require('cheerio');

      // set some defaults
      req = request.defaults({
          jar: true,                 // save cookies to jar
          rejectUnauthorized: false,
          followAllRedirects: true   // allow redirections
      });

      // POST data then scrape the page
      req.post({
          url: "http://www.example.com/",
          form: { 'foo': 'bar' },
          headers: {
              'User-Agent': 'Super Cool Browser' // optional headers
          }
      }, function(err, resp, body) {

          // load the html into cheerio
          var $ = cheerio.load(body);

          // do something with the page here

      });
    #+END_SRC
* Meteor
** Uninstall meteor
   #+BEGIN_SRC sh
     mv ~/.meteor{,_}
     curl https://install.meteor.com/ | sh
   #+END_SRC

   [[http://stackoverflow.com/a/24688962/514411][How can I completely uninstall and then reinstall Meteor.js? - Stack Overflow]]
   #+BEGIN_SRC sh
Let’s start with the deletions, then we’ll move on to the reinstallations.

   1. If you ever installed Meteorite, uninstall and delete it:
   sudo mrt uninstall
   sudo mrt uninstall --system
   rm -rf ~/.meteorite
   2. Then delete Meteor:
   sudo rm /usr/local/bin/meteor
   rm -rf ~/.meteor

Now start over at the beginning:

   1. Repair permissions if necessary:
   sudo chown -R $(whoami) ~/.npm
   2. Reinstall Meteor:
   curl https://install.meteor.com/ | sh
   3. Next check that your project has all its proper packages:
   cd /path/to/your/project
   meteor update
   4. If your project still won’t compile, you can reset it (warning: deletes database):
   cd /path/to/your/project
   meteor reset

   5. Still no luck? Recreate the Meteor project (warning: deletes database and the project’s memory of what packages you’ve installed):
   cd /path/to/your/project
   rm -rf ./.meteor
   cd ..
   meteor create project-new
   rm ./project-new/project-new.*
   mv ./project/* ./project-new/
   cd ./project-new
   #+END_SRC
** switch meteor version
   [[https://forums.meteor.com/t/how-do-you-downgrade-the-meteor-tool-from-1-4-to-1-3/28562/8][How do you downgrade the meteor tool from 1.4 to 1.3? - Meteor forums]]

   =meteor --release 1.3.5.1 build= etc.
** links
   - [[http://qiita.com/hashrock/items/575e0be0a362e6c78dd1][MeteorはTwitter連携ログインを作るのがめちゃ楽 - Qiita]]
* Express
  [[http://expressjs.com/][Express - Node.js web application framework]]
** initialize
   #+BEGIN_SRC sh
     npm i -g express-generator
     express --view ejs -c less [appName]
     cd appName
     npm i
   #+END_SRC
** rendering
*** route/users.js
   #+BEGIN_SRC js
           res.render('users', {
             title: 'users',
             users: result[0],
             count: result[1]
           });
   #+END_SRC
*** view/users.js
    #+BEGIN_SRC html
      <h1><%= title %></h1>
      <p>Welcome to <%= title %></p>
      <h3>user count is <%= count %>
        <ul>
          <% users.forEach(function(user){ %>
            <%- include('user/show', {user: user}); %>
          <% }); %>
        </ul>
    #+END_SRC
*** view/user/show.js
    #+BEGIN_SRC html
      <li>name: <%= user.name %></li>
    #+END_SRC
* Ejs
  [[http://ejs.co/][EJS -- Embedded JavaScript templates]]
** tags
   - script =<% %>= ::
        #+BEGIN_SRC html
          <% users.forEach(function(user){ %>
              <%- include('user/show', {user: user}); %>
          <% }); %>
        #+END_SRC
   - value(html escaped) `<%= %>` ::
        #+BEGIN_SRC html
          <%= user.name %>
        #+END_SRC
   - value(unescaped) =<%- %>= ::
        #+BEGIN_SRC html
          <%- user.name %>
          <%- include('user/show', {user: user}); %>
        #+END_SRC
   - comment (not output to html) =<%# %>= ::
   - output '=%=' =<%%= ::
* mongodb
** MongoClient
   [[https://mongodb.github.io/node-mongodb-native/2.0/api/MongoClient.html][Class: MongoClient]]
*** initialize
    #+BEGIN_SRC sh
      npm i -S mongodb
    #+END_SRC
*** use with promise
    #+BEGIN_SRC js
      var MongoClient = require('mongodb').MongoClient;
      var con = MongoClient.connect('mongodb://localhost:27017/somedb');
      con
          .then(function(db){
              var promises = [];
              promises.push(db.collection('users').find().toArray());
              promises.push(db.collection('users').count());
              return Promise.all(promises);
          })
          .then(function(result){
              // result[0] is users
              // result[1] is count of users
              console.log(result);
          })
          .catch(function(err){
              throw err;
          });
    #+END_SRC
