* edison notes
** edison_config
   =/etc/systemd/system/default.target.wants/edison_config.service=
#+BEGIN_SRC sh
root@edison:~# cat /etc/systemd/system/default.target.wants/edison_config.service
[Unit]
Description=The Edison status and configuration service
After=mdns.service

[Service]
ExecStart=/bin/su root -c 'node /usr/lib/edison_config_tools/edison-config-server.js'
Restart=always
RestartSec=10s
Environment=NODE_ENV=production

[Install]
WantedBy=default.target
#+END_SRC

** Links
   - [[http://matome.naver.jp/odai/2141942265524740001][Intel Edisonで何ができる？　入門編 - NAVER まとめ]]
   - [[https://software.intel.com/en-us/iot/documentation?value=80494][Documentation | IoT | Intel® Software]]
   - [[http://edison-lab.jp/examples/][Examples | Edison Lab (エジソン ラボ)]]
   - [[http://qiita.com/hishi/items/b6c76a6cda8f7a825559][Intel Edisonでホームサーバ構築 (2) 家庭用100V電源の制御 - Qiita]]
   - [[https://www.sparkfun.com/products/13045][SparkFun Block for Intel® Edison - Base - DEV-13045 - SparkFun Electronics]]
     より小さいボード
   - [[https://qiita.com/tags/Edison][Edisonに関する150件の投稿 - Qiita]]
   - [[https://software.intel.com/en-us/iot/hardware/edison/dev-kit][The Intel® IoT Developer Kit for the Intel® Edison Module | Intel® Software]]
   - [[https://software.intel.com/en-us/iot/tools-ide/ide/xdk][Intel® XDK | IoT | Intel® Software]]
   - [[https://software.intel.com/en-us/iot/hardware/edison][Develop for the Intel® Edison Module | Intel® Software]]
   - [[https://software.intel.com/en-us/articles/enabling-ibm-bluemix-on-intel-edison-using-mongodb-by-compose][Enabling IBM* Bluemix* on Intel® Edison Boards using MongoDB* by Compose | Intel® Software]]
   - [[https://software.intel.com/en-us/articles/predicting-user-activity-in-devices-using-an-accelerometer-with-the-intel-edison][Predicting user activity in devices using an accelerometer with the Intel® Edison Board | Intel® Software]]
   - [[https://software.intel.com/en-us/get-started-edison-osx][IoT - Get Started with the Intel® Edison Development Board on Mac OS X* | Intel® Software]]
   - [[https://software.intel.com/en-us/intel-edison-board-user-guide][IoT - Intel® Edison Board User Guide | Intel® Software]]
   - [[https://software.intel.com/en-us/node-js-templates-for-intel-xdk][IoT - Node.js* templates for the Intel® XDK | Intel® Software]]
   - [[http://www.intel.com/content/www/us/en/support/boards-and-kits/000006377.html][Flashing the Intel® Edison Board via Mac* (Wi-Fi)]]
   - [[http://www.intel.com/content/www/us/en/support/boards-and-kits/000005808.html?wapkw=331189][Hardware Guide for the Intel® Edison Compute Module]]
   - [[http://qiita.com/vivitter/items/f52a65a34f536af6004a][Intel EdisonにMongoDBをインストールする - Qiita]]
   - [[https://gist.github.com/pbosetti/027125c4ba066f51bf2c][Intel edison cross compiling tricks on OS X]]
   - [[http://shawnhymel.com/809/cross-compiling-on-linux-for-the-edison/][Cross Compiling on Linux for the Edison | Shawn Hymel]]

** backup/restore
If you are using arduino kit...
#+BEGIN_SRC sh
# backup
dd if=/dev/mmcblk0 of=/media/sdcard/edison2_bk.img
# restore
dd if=/media/sdcard/edison2_bk.img of=/dev/mmcblk0
#+END_SRC
cf. [[http://rwx.io/blog/2015/02/18/seting-up-an-edison/][Setting Up a New Intel Edison -]]

** Install SBCL with roswell
I need no dependencies install.
#+BEGIN_SRC sh
# instractions from https://github.com/roswell/roswell/wiki/1.-Installation
git clone -b release https://github.com/roswell/roswell.git
cd roswell
sh bootstrap
./configure
make
sudo make install
# this takes some minutes
ros setup
# this takes many time.....(51min)
ros install sbcl
#+END_SRC

** Install Emacs
cf. https://github.com/scorpiodawg/emacs-24.4-edison
(How to install..?)

** limit to public key auth
   generate and transfer public key.

   - in local PC
#+BEGIN_SRC sh
ssh-keygen
scp ~/.ssh/id_rsa.pub edison:
#+END_SRC

   - in edison
#+BEGIN_SRC sh
mkdir .ssh
chmod 700 .ssh
cat ~/id_rsa.pub >> .ssh/authorized_keys
#+END_SRC

   - in local PC. connect with keys
#+BEGIN_SRC sh
ssh -i ~/.ssh/id_rsa root@edison
#+END_SRC

   - in other terminal connecting to edison
#+BEGIN_SRC sh
  root@edison:~# cp /etc/ssh/sshd_config{,.original}
  root@edison:~# vi /etc/ssh/sshd_config
  # edit disable password authentication
  # PasswordAuthentication -> no
  # PermitEmptyPasswords -> no
  root@edison:~# diff -u /etc/ssh/sshd_config{.original,}
  --- /etc/ssh/sshd_config.original
  +++ /etc/ssh/sshd_config
  @@ -58,8 +58,8 @@
   #IgnoreRhosts yes

   # To disable tunneled clear text passwords, change to no here!
  -#PasswordAuthentication yes
  -PermitEmptyPasswords yes
  +PasswordAuthentication no
  +PermitEmptyPasswords no

   # Change to no to disable s/key passwords
   #ChallengeResponseAuthentication yes
  # then, restart sshd
  root@edison:~# systemctl list-unit-files|grep ssh
  sshd@.service                          static
  sshdgenkeys.service                    enabled
  sshd.socket                            enabled
  root@edison:~# systemctl restart sshd.socket
#+END_SRC

   - test connection from new terminal
#+BEGIN_SRC sh
  % ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no root@edison
  Permission denied (publickey,keyboard-interactive).
  % ssh -i ~/.ssh/id_rsa root@edison
  root@edison:~#
#+END_SRC

** mongodb
   but, redis is already installed...
*** install
    cf. [[http://qiita.com/vivitter/items/f52a65a34f536af6004a][Intel EdisonにMongoDBをインストールする - Qiita]]

    cf. [[http://www.instructables.com/id/Daycare-Monitoring-and-Tracking-System-Using-Intel/?ALLSTEPS][Daycare Monitoring and Tracking System Using Intel Edison Development Kit - All]]

    go to [[https://www.mongodb.com/download-center][MongoDB Download Center | MongoDB]], select Linux 32-bit, get mongodb download url.
    #+BEGIN_SRC sh
      mkdir ~/downloads
      cd ~/downloads
      curl -O https://fastdl.mongodb.org/linux/mongodb-linux-i686-3.2.9.tgz
      mkdir ~/bin
      cd ~/bin
      tar xzf ../downloads/mongodb-linux-i686-3.2.9.tgz
      ln -s mongodb-linux-i686-3.2.9 mongodb
      mkdir -p /data/db
      # test launch
      ~/bin/mongodb/bin/mongod --storageEngine=mmapv1
    #+END_SRC
*** add to systemd
    cf. [[https://communities.intel.com/thread/102483][how do I launch MongoDB as a service? |Intel Communities]]

**** create /etc/systemd/system/mongod.service and write below.
     #+BEGIN_SRC conf
       [Unit]
       Description=Mongo is a scalable, document-oriented database.
       After=syslog.target network.target

       [Service]
       ExecStart=/home/root/bin/mongodb/bin/mongod --storageEngine=mmapv1

       [Install]
       WantedBy=multi-user.target
     #+END_SRC

**** start service
     #+BEGIN_SRC sh
       root@edison:~# systemctl enable mongod
       ln -s '/etc/systemd/system/mongod.service' '/etc/systemd/system/multi-user.target.wants/mongod.service'
       root@edison:~# systemctl start mongod
       root@edison:~# systemctl status mongod
       ● mongod.service - Mongo is a scalable, document-oriented database.
          Loaded: loaded (/etc/systemd/system/mongod.service; disabled)
          Active: active (running) since Sun 2016-09-25 06:46:34 UTC; 17s ago
        Main PID: 4875 (mongod)
          CGroup: /system.slice/mongod.service
                  └─4875 /home/root/bin/mongodb/bin/mongod --storageEngine=mmapv1

       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.572+0000 I CONTROL  [initandlisten]
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.572+0000 I CONTROL  [initandlisten] ** NOTE: This is...inary.
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.572+0000 I CONTROL  [initandlisten] **       32 bit ...rnal).
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.572+0000 I CONTROL  [initandlisten] **       Note th...y off.
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.572+0000 I CONTROL  [initandlisten] **       See htt.../32bit
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.573+0000 I CONTROL  [initandlisten]
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.608+0000 I FTDC     [initandlisten] Initializing ful....data'
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.608+0000 I NETWORK  [HostnameCanonicalizationWorker]...worker
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.614+0000 I NETWORK  [initandlisten] waiting for conn... 27017
       Sep 25 06:46:34 edison mongod[4875]: 2016-09-25T06:46:34.631+0000 W NETWORK  [HostnameCanonicalizationWorker]... known
       Hint: Some lines were ellipsized, use -l to show in full.
       # if you want to view logs like tail -f
       root@edison:~# journalctl -u mongod -f
     #+END_SRC

** tmux
   add opkg repogitories.

   cf. [[http://alextgalileo.altervista.org/edison-package-repo-configuration-instructions.html][Edison Package Repo Configuration Instructions]]
*** edit /etc/opkg/base-feeds.conf
    #+BEGIN_SRC conf
      src/gz all      http://repo.opkg.net/edison/repo/all
      src/gz edison   http://repo.opkg.net/edison/repo/edison
      src/gz core2-32 http://repo.opkg.net/edison/repo/core2-32
    #+END_SRC
*** update
    #+BEGIN_SRC sh
      opkg update
    #+END_SRC
*** install tmux
    #+BEGIN_SRC sh
      opkg install tmux
    #+END_SRC
    =opkg search tmux= does not show packages.

** set timezone
   cf. [[http://qiita.com/CLCL/items/e991e23f4bdbca5ff28b][Intel Edisonの時刻合わせ（systemd-timesyncd,timedatectl） - Qiita]]
   #+BEGIN_SRC sh
     root@edison:~# timedatectl
           Local time: Sun 2016-09-25 07:25:16 UTC
       Universal time: Sun 2016-09-25 07:25:16 UTC
             RTC time: Sun 2016-09-25 07:25:16
            Time zone: Universal (UTC, +0000)
          NTP enabled: yes
     NTP synchronized: yes
      RTC in local TZ: no
           DST active: n/a
     root@edison:~# timedatectl set-timezone Asia/Tokyo
     root@edison:~# timedatectl
           Local time: Sun 2016-09-25 16:27:41 JST
       Universal time: Sun 2016-09-25 07:27:41 UTC
             RTC time: Sun 2016-09-25 07:27:41
            Time zone: Asia/Tokyo (JST, +0900)
          NTP enabled: yes
     NTP synchronized: yes
      RTC in local TZ: no
           DST active: n/a
     root@edison:~# systemctl status systemd-timesyncd
     ● systemd-timesyncd.service - Network Time Synchronization
        Loaded: loaded (/lib/systemd/system/systemd-timesyncd.service; enabled)
        Active: active (running) since Thu 2016-09-22 23:34:58 UTC; 2 days ago
          Docs: man:systemd-timesyncd.service(8)
      Main PID: 160 (systemd-timesyn)
        Status: "Using Time Server 216.239.35.12:123 (time4.google.com)."
        CGroup: /system.slice/systemd-timesyncd.service
                └─160 /lib/systemd/systemd-timesyncd

     Sep 25 02:07:41 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/-0.016s/0.097s/0.047s/+35ppm
     Sep 25 02:41:49 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/-0.068s/0.097s/0.089s/+18ppm
     Sep 25 03:15:57 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/-0.043s/0.132s/0.092s/+8ppm
     Sep 25 03:50:05 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/-0.030s/0.155s/0.098s/+1ppm
     Sep 25 04:24:14 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/+0.024s/0.184s/0.093s/+9ppm
     Sep 25 04:58:22 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/+0.034s/0.087s/0.094s/+18ppm
     Sep 25 05:32:30 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/-0.022s/0.087s/0.050s/+12ppm
     Sep 25 06:06:38 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/-0.056s/0.164s/0.036s/+0ppm
     Sep 25 06:40:46 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/+0.065s/0.047s/0.095s/+15ppm
     Sep 25 07:14:55 edison systemd-timesyncd[160]: interval/delta/delay/jitter/drift 2048s/-0.019s/0.086s/0.087s/+7ppm
   #+END_SRC
